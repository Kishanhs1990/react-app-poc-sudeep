{"version":3,"sources":["Components/CodeEditor/CodeEditorComponent.jsx","Components/StringParser/StringParserComponent.jsx"],"names":["CodeEditor","this","props","id","onChangeFunc","data","mode","readOnly","debounceChangePeriod","className","theme","name","onChange","setOptions","useWorker","width","height","value","wrapEnabled","React","PureComponent","StringParserComponent","sleep","ms","Promise","resolve","setTimeout","onInputChange","newValue","input","state","length","setState","handleClick","a","async","accumulator","actions","buttonText","parseToJSON","parser","parserError","error","parsedResultJSON","CodeEditorComponent","validate","type","onClick","to","Component","withRouter","connect","dispatch","bindActionCreators","StringParserActions"],"mappings":"yOAkCeA,G,+LA3BH,IAAD,EAOHC,KAAKC,MALPC,EAFK,EAELA,GAFK,IAGLC,oBAHK,MAGU,aAHV,MAILC,YAJK,MAIE,GAJF,MAKLC,YALK,MAKE,aALF,MAMLC,gBANK,SAQP,OACE,kBAAC,IAAD,CACEC,qBAAsB,IACtBC,UAAU,cACVH,KAAMA,EACNI,MAAM,UACNC,KAAMR,EACNS,SAAUR,EACVS,WAAY,CAAEC,WAAW,GACzBC,MAAM,kBACNC,OAAO,OACPC,MAAOZ,EACPE,SAAUA,EACVW,aAAW,Q,GAtBMC,IAAMC,gB,QCUzBC,E,YACJ,WAAYnB,GAAQ,IAAD,8BACjB,4CAAMA,KAQRoB,MAAQ,SAAAC,GACN,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,OAVjC,EAanBI,cAAgB,SAAAC,GAAa,IACnBC,EAAU,EAAKC,MAAfD,MACJD,GAAYA,IAAaC,GAA6B,IAApBD,EAASG,QAC7C,EAAKC,SAAS,CACZH,MAAOD,KAjBM,EAsBnBK,YAAc,gCAAAC,EAAAC,OAAA,yDACmB,EAAKL,MAA5BD,EADI,EACJA,MAAOO,EADH,EACGA,YACPC,EAAY,EAAKnC,MAAjBmC,QACR,EAAKL,SAAS,CACZM,WAAY,cAJF,WAAAJ,EAAA,MAMN,EAAKZ,MAAM,MANL,OAOZe,EAAQE,YAAYV,EAAOO,GAC3B,EAAKJ,SAAS,CAAEM,WAAY,UARhB,sCApBZ,EAAKR,MAAQ,CACXQ,WAAY,QACZF,YAAa,MACbP,MAAO,IALQ,E,sEAiCT,IAAD,SACuB5B,KAAK6B,MAA3BD,EADD,EACCA,MAAOS,EADR,EACQA,WADR,EAIHrC,KAAKC,MADPsC,OAAiBC,EAHZ,EAGKC,MAAoBC,EAHzB,EAGyBA,iBAGhC,OACE,oCACE,yBAAKlC,UAAU,OACb,yBAAKA,UAAU,aAAf,2CACA,yBAAKA,UAAU,eACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,wBACb,yBAAKA,UAAU,qBAAf,qBACA,kBAACmC,EAAD,CACEzC,GAAG,QACH0C,UAAU,EACVzC,aAAcH,KAAK0B,cACnBtB,KAAMwB,KAGV,yBAAKpB,UAAU,wBACb,yBAAKA,UAAU,qBAAf,uBACA,kBAACmC,EAAD,CAAqBzC,GAAG,SAASE,KAAMsC,EAAkBpC,UAAQ,KAEnE,yBAAKE,UAAU,6BACb,4BAAQqC,KAAK,SAASC,QAAS,kBAAM,EAAKd,gBACvCK,GAEH,kBAAC,IAAD,CAAMU,GAAG,KAAT,UAGHP,EAAYV,OAAS,GACpB,yBAAKtB,UAAU,aACb,2BAAIgC,W,GApEgBtB,IAAM8B,WA8E3BC,sBAAWC,aAtFF,SAAArB,GAAK,MAAK,CAChCU,OAAQV,EAAMU,WAGW,SAAAY,GAAQ,MAAK,CACtCf,QAASgB,YAAmB,eAAKC,KAAuBF,MAiFhCD,CAA6C9B","file":"static/js/63.f40cc9bc.chunk.js","sourcesContent":["import React from 'react';\n\nimport AceEditor from 'react-ace';\nimport 'ace-builds/src-noconflict/mode-javascript';\nimport 'ace-builds/src-noconflict/theme-monokai';\n\nclass CodeEditor extends React.PureComponent {\n  render() {\n    const {\n      id,\n      onChangeFunc = () => {},\n      data = '',\n      mode = 'javascript',\n      readOnly = false\n    } = this.props;\n    return (\n      <AceEditor\n        debounceChangePeriod={1000}\n        className=\"code-editor\"\n        mode={mode}\n        theme=\"monokai\"\n        name={id}\n        onChange={onChangeFunc}\n        setOptions={{ useWorker: false }}\n        width=\"100% !important\"\n        height=\"40vh\"\n        value={data}\n        readOnly={readOnly}\n        wrapEnabled\n      />\n    );\n  }\n}\n\nexport default CodeEditor;\n","import React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport CodeEditorComponent from '../CodeEditor/CodeEditorComponent';\nimport { StringParserActions } from '../../Store/Actions';\n\nconst mapStateToProps = state => ({\n  parser: state.parser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  actions: bindActionCreators({ ...StringParserActions }, dispatch)\n});\n\nclass StringParserComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      buttonText: 'Parse',\n      accumulator: 'and',\n      input: ''\n    };\n  }\n\n  sleep = ms => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  };\n\n  onInputChange = newValue => {\n    const { input } = this.state;\n    if (newValue && newValue !== input && newValue.length !== 0) {\n      this.setState({\n        input: newValue\n      });\n    }\n  };\n\n  handleClick = async () => {\n    const { input, accumulator } = this.state;\n    const { actions } = this.props;\n    this.setState({\n      buttonText: 'Parsing..'\n    });\n    await this.sleep(1000);\n    actions.parseToJSON(input, accumulator);\n    this.setState({ buttonText: 'Parse' });\n  };\n\n  render() {\n    const { input, buttonText } = this.state;\n    const {\n      parser: { error: parserError, parsedResultJSON }\n    } = this.props;\n\n    return (\n      <>\n        <div className=\"box\">\n          <div className=\"title-box\">Custom parser to convert String to JSON</div>\n          <div className=\"box-content\">\n            <div className=\"items-box noselect\">\n              <div className=\"half-column half-one\">\n                <div className=\"title-box heading\">String goes here!</div>\n                <CodeEditorComponent\n                  id=\"input\"\n                  validate={false}\n                  onChangeFunc={this.onInputChange}\n                  data={input}\n                />\n              </div>\n              <div className=\"half-column half-two\">\n                <div className=\"title-box heading\">JSON response here!</div>\n                <CodeEditorComponent id=\"output\" data={parsedResultJSON} readOnly />\n              </div>\n              <div className=\"buttons-box button-column\">\n                <button type=\"button\" onClick={() => this.handleClick()}>\n                  {buttonText}\n                </button>\n                <Link to=\"/\">Back</Link>\n              </div>\n            </div>\n            {parserError.length > 0 && (\n              <div className=\"error-box\">\n                <p>{parserError}</p>\n              </div>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(StringParserComponent));\n"],"sourceRoot":""}