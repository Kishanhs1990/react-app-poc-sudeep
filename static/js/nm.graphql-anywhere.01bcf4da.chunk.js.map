{"version":3,"sources":["../node_modules/graphql-anywhere/lib/graphql.js","../node_modules/graphql-anywhere/lib/async.js"],"names":["Object","defineProperty","exports","value","apollo_utilities_1","executeSelectionSet","selectionSet","rootValue","execContext","fragmentMap","contextValue","variables","variableValues","result","selections","forEach","selection","shouldInclude","isField","fieldResult","field","resolver","fieldName","name","args","argumentsObjectFromField","info","isLeaf","resultKey","resultKeyNameFromField","directives","getDirectiveInfoFromField","Array","isArray","executeSubSelectedArray","map","item","executeField","resultFieldKey","undefined","merge","fragment","isInlineFragment","Error","typeCondition","fragmentMatcher","fragmentResult","resultMapper","graphql","document","execOptions","mainDefinition","getMainDefinition","fragments","getFragmentDefinitions","createFragmentMap","hasOwn","prototype","hasOwnProperty","dest","src","keys","key","srcVal","call","tslib_1","graphql_1","__awaiter","this","execute","_this","__generator","_a","label","sent","Promise","all"],"mappings":"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","file":"static/js/nm.graphql-anywhere.01bcf4da.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar apollo_utilities_1 = require(\"apollo-utilities\");\n\nfunction graphql(resolver, document, rootValue, contextValue, variableValues, execOptions) {\n  if (variableValues === void 0) {\n    variableValues = {};\n  }\n\n  if (execOptions === void 0) {\n    execOptions = {};\n  }\n\n  var mainDefinition = apollo_utilities_1.getMainDefinition(document);\n  var fragments = apollo_utilities_1.getFragmentDefinitions(document);\n  var fragmentMap = apollo_utilities_1.createFragmentMap(fragments);\n  var resultMapper = execOptions.resultMapper;\n\n  var fragmentMatcher = execOptions.fragmentMatcher || function () {\n    return true;\n  };\n\n  var execContext = {\n    fragmentMap: fragmentMap,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    resultMapper: resultMapper,\n    resolver: resolver,\n    fragmentMatcher: fragmentMatcher\n  };\n  return executeSelectionSet(mainDefinition.selectionSet, rootValue, execContext);\n}\n\nexports.graphql = graphql;\n\nfunction executeSelectionSet(selectionSet, rootValue, execContext) {\n  var fragmentMap = execContext.fragmentMap,\n      contextValue = execContext.contextValue,\n      variables = execContext.variableValues;\n  var result = {};\n  selectionSet.selections.forEach(function (selection) {\n    if (variables && !apollo_utilities_1.shouldInclude(selection, variables)) {\n      return;\n    }\n\n    if (apollo_utilities_1.isField(selection)) {\n      var fieldResult = executeField(selection, rootValue, execContext);\n      var resultFieldKey = apollo_utilities_1.resultKeyNameFromField(selection);\n\n      if (fieldResult !== undefined) {\n        if (result[resultFieldKey] === undefined) {\n          result[resultFieldKey] = fieldResult;\n        } else {\n          merge(result[resultFieldKey], fieldResult);\n        }\n      }\n    } else {\n      var fragment = void 0;\n\n      if (apollo_utilities_1.isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        fragment = fragmentMap[selection.name.value];\n\n        if (!fragment) {\n          throw new Error(\"No fragment named \" + selection.name.value);\n        }\n      }\n\n      var typeCondition = fragment.typeCondition.name.value;\n\n      if (execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) {\n        var fragmentResult = executeSelectionSet(fragment.selectionSet, rootValue, execContext);\n        merge(result, fragmentResult);\n      }\n    }\n  });\n\n  if (execContext.resultMapper) {\n    return execContext.resultMapper(result, rootValue);\n  }\n\n  return result;\n}\n\nfunction executeField(field, rootValue, execContext) {\n  var variables = execContext.variableValues,\n      contextValue = execContext.contextValue,\n      resolver = execContext.resolver;\n  var fieldName = field.name.value;\n  var args = apollo_utilities_1.argumentsObjectFromField(field, variables);\n  var info = {\n    isLeaf: !field.selectionSet,\n    resultKey: apollo_utilities_1.resultKeyNameFromField(field),\n    directives: apollo_utilities_1.getDirectiveInfoFromField(field, variables),\n    field: field\n  };\n  var result = resolver(fieldName, rootValue, args, contextValue, info);\n\n  if (!field.selectionSet) {\n    return result;\n  }\n\n  if (result == null) {\n    return result;\n  }\n\n  if (Array.isArray(result)) {\n    return executeSubSelectedArray(field, result, execContext);\n  }\n\n  return executeSelectionSet(field.selectionSet, result, execContext);\n}\n\nfunction executeSubSelectedArray(field, result, execContext) {\n  return result.map(function (item) {\n    if (item === null) {\n      return null;\n    }\n\n    if (Array.isArray(item)) {\n      return executeSubSelectedArray(field, item, execContext);\n    }\n\n    return executeSelectionSet(field.selectionSet, item, execContext);\n  });\n}\n\nvar hasOwn = Object.prototype.hasOwnProperty;\n\nfunction merge(dest, src) {\n  if (src !== null && typeof src === 'object') {\n    Object.keys(src).forEach(function (key) {\n      var srcVal = src[key];\n\n      if (!hasOwn.call(dest, key)) {\n        dest[key] = srcVal;\n      } else {\n        merge(dest[key], srcVal);\n      }\n    });\n  }\n}\n\nexports.merge = merge;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tslib_1 = require(\"tslib\");\n\nvar apollo_utilities_1 = require(\"apollo-utilities\");\n\nvar graphql_1 = require(\"./graphql\");\n\nfunction graphql(resolver, document, rootValue, contextValue, variableValues, execOptions) {\n  if (execOptions === void 0) {\n    execOptions = {};\n  }\n\n  var mainDefinition = apollo_utilities_1.getMainDefinition(document);\n  var fragments = apollo_utilities_1.getFragmentDefinitions(document);\n  var fragmentMap = apollo_utilities_1.createFragmentMap(fragments);\n  var resultMapper = execOptions.resultMapper;\n\n  var fragmentMatcher = execOptions.fragmentMatcher || function () {\n    return true;\n  };\n\n  var execContext = {\n    fragmentMap: fragmentMap,\n    contextValue: contextValue,\n    variableValues: variableValues,\n    resultMapper: resultMapper,\n    resolver: resolver,\n    fragmentMatcher: fragmentMatcher\n  };\n  return executeSelectionSet(mainDefinition.selectionSet, rootValue, execContext);\n}\n\nexports.graphql = graphql;\n\nfunction executeSelectionSet(selectionSet, rootValue, execContext) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var fragmentMap, contextValue, variables, result, execute;\n\n    var _this = this;\n\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          fragmentMap = execContext.fragmentMap, contextValue = execContext.contextValue, variables = execContext.variableValues;\n          result = {};\n\n          execute = function execute(selection) {\n            return tslib_1.__awaiter(_this, void 0, void 0, function () {\n              var fieldResult, resultFieldKey, fragment, typeCondition, fragmentResult;\n              return tslib_1.__generator(this, function (_a) {\n                switch (_a.label) {\n                  case 0:\n                    if (!apollo_utilities_1.shouldInclude(selection, variables)) {\n                      return [2];\n                    }\n\n                    if (!apollo_utilities_1.isField(selection)) return [3, 2];\n                    return [4, executeField(selection, rootValue, execContext)];\n\n                  case 1:\n                    fieldResult = _a.sent();\n                    resultFieldKey = apollo_utilities_1.resultKeyNameFromField(selection);\n\n                    if (fieldResult !== undefined) {\n                      if (result[resultFieldKey] === undefined) {\n                        result[resultFieldKey] = fieldResult;\n                      } else {\n                        graphql_1.merge(result[resultFieldKey], fieldResult);\n                      }\n                    }\n\n                    return [2];\n\n                  case 2:\n                    if (apollo_utilities_1.isInlineFragment(selection)) {\n                      fragment = selection;\n                    } else {\n                      fragment = fragmentMap[selection.name.value];\n\n                      if (!fragment) {\n                        throw new Error(\"No fragment named \" + selection.name.value);\n                      }\n                    }\n\n                    typeCondition = fragment.typeCondition.name.value;\n                    if (!execContext.fragmentMatcher(rootValue, typeCondition, contextValue)) return [3, 4];\n                    return [4, executeSelectionSet(fragment.selectionSet, rootValue, execContext)];\n\n                  case 3:\n                    fragmentResult = _a.sent();\n                    graphql_1.merge(result, fragmentResult);\n                    _a.label = 4;\n\n                  case 4:\n                    return [2];\n                }\n              });\n            });\n          };\n\n          return [4, Promise.all(selectionSet.selections.map(execute))];\n\n        case 1:\n          _a.sent();\n\n          if (execContext.resultMapper) {\n            return [2, execContext.resultMapper(result, rootValue)];\n          }\n\n          return [2, result];\n      }\n    });\n  });\n}\n\nfunction executeField(field, rootValue, execContext) {\n  return tslib_1.__awaiter(this, void 0, void 0, function () {\n    var variables, contextValue, resolver, fieldName, args, info, result;\n    return tslib_1.__generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          variables = execContext.variableValues, contextValue = execContext.contextValue, resolver = execContext.resolver;\n          fieldName = field.name.value;\n          args = apollo_utilities_1.argumentsObjectFromField(field, variables);\n          info = {\n            isLeaf: !field.selectionSet,\n            resultKey: apollo_utilities_1.resultKeyNameFromField(field),\n            directives: apollo_utilities_1.getDirectiveInfoFromField(field, variables),\n            field: field\n          };\n          return [4, resolver(fieldName, rootValue, args, contextValue, info)];\n\n        case 1:\n          result = _a.sent();\n\n          if (!field.selectionSet) {\n            return [2, result];\n          }\n\n          if (result == null) {\n            return [2, result];\n          }\n\n          if (Array.isArray(result)) {\n            return [2, executeSubSelectedArray(field, result, execContext)];\n          }\n\n          return [2, executeSelectionSet(field.selectionSet, result, execContext)];\n      }\n    });\n  });\n}\n\nfunction executeSubSelectedArray(field, result, execContext) {\n  return Promise.all(result.map(function (item) {\n    if (item === null) {\n      return null;\n    }\n\n    if (Array.isArray(item)) {\n      return executeSubSelectedArray(field, item, execContext);\n    }\n\n    return executeSelectionSet(field.selectionSet, item, execContext);\n  }));\n}"],"sourceRoot":""}