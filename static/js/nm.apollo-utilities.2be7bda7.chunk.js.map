{"version":3,"sources":["../node_modules/apollo-utilities/lib/bundle.esm.js"],"names":["isScalarValue","value","indexOf","kind","isNumberValue","valueToObjectRepresentation","argObj","name","variables","isIntValue","isFloatValue","Number","isBooleanValue","isStringValue","isObjectValue","nestedArgObj_1","fields","map","obj","isVariable","variableValue","isListValue","values","listValue","nestedArgArrayObj","isEnumValue","isNullValue","storeKeyNameFromField","field","directivesObj","directives","forEach","directive","arguments","_a","length","getStoreKeyName","KNOWN_DIRECTIVES","fieldName","args","filterKeys","sort","queryArgs_1","filteredArgs_1","key","JSON","stringify","completeFieldName","stringifiedArgs","Object","keys","argumentsObjectFromField","argObj_1","resultKeyNameFromField","alias","isField","selection","isInlineFragment","isIdValue","idObject","type","generated","toIdValue","idConfig","id","typename","undefined","isJsonValue","jsonObject","defaultValueFromVariable","node","valueFromNode","onVariable","parseInt","parseFloat","v","_i","getDirectiveInfoFromField","directiveObj_1","shouldInclude","getInclusionDirectives","every","ifArgument","evaledValue","getDirectiveNames","doc","names","Directive","push","hasDirectives","some","hasClientExports","document","isInclusionDirective","filter","directiveArguments","ifValue","getFragmentQueryDocument","fragmentName","actualFragmentName","fragments","definitions","definition","operation","selectionSet","selections","assign","target","sources","source","getMutationDefinition","checkDocument","mutationDef","operations","d","getOperationDefinition","getOperationDefinitionOrDie","def","getOperationName","x","getFragmentDefinitions","getQueryDefinition","queryDef","getFragmentDefinition","fragmentDef","getMainDefinition","queryDoc","fragmentDefinition","createFragmentMap","symTable","fragment","getDefaultValues","variableDefinitions","defaultValues","defaultValue","variable","defaultValueObj","apply","variablesInOperation","Set","add","filterInPlace","array","test","context","elem","i","call","this","TYPENAME_FIELD","nullIfDocIsEmpty","isEmpty","op","getDirectiveMatcher","dir","removeDirectivesFromDocument","variablesInUse","create","variablesToRemove","fragmentSpreadsInUse","fragmentSpreadsToRemove","modifiedDoc","Variable","enter","_key","parent","Field","remove","arg","getAllFragmentSpreadsFromSelectionSet","allFragments","frag","FragmentSpread","removeArgumentsFromDocument","fs","removeFragmentSpreadFromDocument","addTypenameToDocument","SelectionSet","lastIndexOf","connectionRemoveConfig","willRemove","removeConnectionDirectiveFromDocument","hasDirectivesInSelectionSet","nestedCheck","hasDirectivesInSelection","getDirectivesFromDocument","parentPath","_parent","path","currentPath","join","startsWith","selectionsWithDirectives","config","argMatcher","argument","aConfig","getArgumentMatcher","OperationDefinition","varDef","argConfig","argMatchCount_1","Argument","FragmentDefinition","buildQueryFromSelectionSet","removeClientSetsFromDocument","canUseWeakMap","WeakMap","navigator","product","toString","prototype","cloneDeep","cloneDeepHelper","val","seen","has","get","copy_1","slice","set","child","copy_2","getPrototypeOf","Map","getEnv","process","isEnv","env","isProduction","isDevelopment","isTest","tryFunctionOrLogError","f","e","console","error","graphQLResultHasError","result","errors","maybeDeepFreeze","Symbol","deepFreeze","o","freeze","getOwnPropertyNames","prop","isFrozen","hasOwnProperty","mergeDeep","mergeDeepArray","count","pastCopies","shallowCopyForMerge","mergeHelper","isObject","isExtensible","sourceKey","sourceValue","targetValue","Array","isArray","__proto__","haveWarned","warnOnceInDevelopment","msg","warn","stripSymbols","data","parse"],"mappings":"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","file":"static/js/nm.apollo-utilities.2be7bda7.chunk.js","sourcesContent":["import { visit } from 'graphql/language/visitor';\nimport { InvariantError, invariant } from 'ts-invariant';\nimport { __assign, __spreadArrays } from 'tslib';\nimport stringify from 'fast-json-stable-stringify';\nexport { equal as isEqual } from '@wry/equality';\n\nfunction isScalarValue(value) {\n  return ['StringValue', 'BooleanValue', 'EnumValue'].indexOf(value.kind) > -1;\n}\n\nfunction isNumberValue(value) {\n  return ['IntValue', 'FloatValue'].indexOf(value.kind) > -1;\n}\n\nfunction isStringValue(value) {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value) {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value) {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value) {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value) {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value) {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value) {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value) {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value) {\n  return value.kind === 'NullValue';\n}\n\nfunction valueToObjectRepresentation(argObj, name, value, variables) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    var nestedArgObj_1 = {};\n    value.fields.map(function (obj) {\n      return valueToObjectRepresentation(nestedArgObj_1, obj.name, obj.value, variables);\n    });\n    argObj[name.value] = nestedArgObj_1;\n  } else if (isVariable(value)) {\n    var variableValue = (variables || {})[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(function (listValue) {\n      var nestedArgArrayObj = {};\n      valueToObjectRepresentation(nestedArgArrayObj, name, listValue, variables);\n      return nestedArgArrayObj[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw process.env.NODE_ENV === \"production\" ? new InvariantError(17) : new InvariantError(\"The inline argument \\\"\" + name.value + \"\\\" of kind \\\"\" + value.kind + \"\\\"\" + 'is not supported. Use variables instead of inline arguments to ' + 'overcome this limitation.');\n  }\n}\n\nfunction storeKeyNameFromField(field, variables) {\n  var directivesObj = null;\n\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(function (directive) {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(function (_a) {\n          var name = _a.name,\n              value = _a.value;\n          return valueToObjectRepresentation(directivesObj[directive.name.value], name, value, variables);\n        });\n      }\n    });\n  }\n\n  var argObj = null;\n\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n          value = _a.value;\n      return valueToObjectRepresentation(argObj, name, value, variables);\n    });\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nvar KNOWN_DIRECTIVES = ['connection', 'include', 'skip', 'client', 'rest', 'export'];\n\nfunction getStoreKeyName(fieldName, args, directives) {\n  if (directives && directives['connection'] && directives['connection']['key']) {\n    if (directives['connection']['filter'] && directives['connection']['filter'].length > 0) {\n      var filterKeys = directives['connection']['filter'] ? directives['connection']['filter'] : [];\n      filterKeys.sort();\n      var queryArgs_1 = args;\n      var filteredArgs_1 = {};\n      filterKeys.forEach(function (key) {\n        filteredArgs_1[key] = queryArgs_1[key];\n      });\n      return directives['connection']['key'] + \"(\" + JSON.stringify(filteredArgs_1) + \")\";\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  var completeFieldName = fieldName;\n\n  if (args) {\n    var stringifiedArgs = stringify(args);\n    completeFieldName += \"(\" + stringifiedArgs + \")\";\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(function (key) {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += \"@\" + key + \"(\" + JSON.stringify(directives[key]) + \")\";\n      } else {\n        completeFieldName += \"@\" + key;\n      }\n    });\n  }\n\n  return completeFieldName;\n}\n\nfunction argumentsObjectFromField(field, variables) {\n  if (field.arguments && field.arguments.length) {\n    var argObj_1 = {};\n    field.arguments.forEach(function (_a) {\n      var name = _a.name,\n          value = _a.value;\n      return valueToObjectRepresentation(argObj_1, name, value, variables);\n    });\n    return argObj_1;\n  }\n\n  return null;\n}\n\nfunction resultKeyNameFromField(field) {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nfunction isField(selection) {\n  return selection.kind === 'Field';\n}\n\nfunction isInlineFragment(selection) {\n  return selection.kind === 'InlineFragment';\n}\n\nfunction isIdValue(idObject) {\n  return idObject && idObject.type === 'id' && typeof idObject.generated === 'boolean';\n}\n\nfunction toIdValue(idConfig, generated) {\n  if (generated === void 0) {\n    generated = false;\n  }\n\n  return __assign({\n    type: 'id',\n    generated: generated\n  }, typeof idConfig === 'string' ? {\n    id: idConfig,\n    typename: undefined\n  } : idConfig);\n}\n\nfunction isJsonValue(jsonObject) {\n  return jsonObject != null && typeof jsonObject === 'object' && jsonObject.type === 'json';\n}\n\nfunction defaultValueFromVariable(node) {\n  throw process.env.NODE_ENV === \"production\" ? new InvariantError(18) : new InvariantError(\"Variable nodes are not supported by valueFromNode\");\n}\n\nfunction valueFromNode(node, onVariable) {\n  if (onVariable === void 0) {\n    onVariable = defaultValueFromVariable;\n  }\n\n  switch (node.kind) {\n    case 'Variable':\n      return onVariable(node);\n\n    case 'NullValue':\n      return null;\n\n    case 'IntValue':\n      return parseInt(node.value, 10);\n\n    case 'FloatValue':\n      return parseFloat(node.value);\n\n    case 'ListValue':\n      return node.values.map(function (v) {\n        return valueFromNode(v, onVariable);\n      });\n\n    case 'ObjectValue':\n      {\n        var value = {};\n\n        for (var _i = 0, _a = node.fields; _i < _a.length; _i++) {\n          var field = _a[_i];\n          value[field.name.value] = valueFromNode(field.value, onVariable);\n        }\n\n        return value;\n      }\n\n    default:\n      return node.value;\n  }\n}\n\nfunction getDirectiveInfoFromField(field, variables) {\n  if (field.directives && field.directives.length) {\n    var directiveObj_1 = {};\n    field.directives.forEach(function (directive) {\n      directiveObj_1[directive.name.value] = argumentsObjectFromField(directive, variables);\n    });\n    return directiveObj_1;\n  }\n\n  return null;\n}\n\nfunction shouldInclude(selection, variables) {\n  if (variables === void 0) {\n    variables = {};\n  }\n\n  return getInclusionDirectives(selection.directives).every(function (_a) {\n    var directive = _a.directive,\n        ifArgument = _a.ifArgument;\n    var evaledValue = false;\n\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables[ifArgument.value.name.value];\n      process.env.NODE_ENV === \"production\" ? invariant(evaledValue !== void 0, 1) : invariant(evaledValue !== void 0, \"Invalid variable referenced in @\" + directive.name.value + \" directive.\");\n    } else {\n      evaledValue = ifArgument.value.value;\n    }\n\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\n\nfunction getDirectiveNames(doc) {\n  var names = [];\n  visit(doc, {\n    Directive: function Directive(node) {\n      names.push(node.name.value);\n    }\n  });\n  return names;\n}\n\nfunction hasDirectives(names, doc) {\n  return getDirectiveNames(doc).some(function (name) {\n    return names.indexOf(name) > -1;\n  });\n}\n\nfunction hasClientExports(document) {\n  return document && hasDirectives(['client'], document) && hasDirectives(['export'], document);\n}\n\nfunction isInclusionDirective(_a) {\n  var value = _a.name.value;\n  return value === 'skip' || value === 'include';\n}\n\nfunction getInclusionDirectives(directives) {\n  return directives ? directives.filter(isInclusionDirective).map(function (directive) {\n    var directiveArguments = directive.arguments;\n    var directiveName = directive.name.value;\n    process.env.NODE_ENV === \"production\" ? invariant(directiveArguments && directiveArguments.length === 1, 2) : invariant(directiveArguments && directiveArguments.length === 1, \"Incorrect number of arguments for the @\" + directiveName + \" directive.\");\n    var ifArgument = directiveArguments[0];\n    process.env.NODE_ENV === \"production\" ? invariant(ifArgument.name && ifArgument.name.value === 'if', 3) : invariant(ifArgument.name && ifArgument.name.value === 'if', \"Invalid argument for the @\" + directiveName + \" directive.\");\n    var ifValue = ifArgument.value;\n    process.env.NODE_ENV === \"production\" ? invariant(ifValue && (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), 4) : invariant(ifValue && (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'), \"Argument for the @\" + directiveName + \" directive must be a variable or a boolean value.\");\n    return {\n      directive: directive,\n      ifArgument: ifArgument\n    };\n  }) : [];\n}\n\nfunction getFragmentQueryDocument(document, fragmentName) {\n  var actualFragmentName = fragmentName;\n  var fragments = [];\n  document.definitions.forEach(function (definition) {\n    if (definition.kind === 'OperationDefinition') {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(5) : new InvariantError(\"Found a \" + definition.operation + \" operation\" + (definition.name ? \" named '\" + definition.name.value + \"'\" : '') + \". \" + 'No operations are allowed when using a fragment as a query. Only fragments are allowed.');\n    }\n\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  if (typeof actualFragmentName === 'undefined') {\n    process.env.NODE_ENV === \"production\" ? invariant(fragments.length === 1, 6) : invariant(fragments.length === 1, \"Found \" + fragments.length + \" fragments. `fragmentName` must be provided when there is not exactly 1 fragment.\");\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  var query = __assign(__assign({}, document), {\n    definitions: __spreadArrays([{\n      kind: 'OperationDefinition',\n      operation: 'query',\n      selectionSet: {\n        kind: 'SelectionSet',\n        selections: [{\n          kind: 'FragmentSpread',\n          name: {\n            kind: 'Name',\n            value: actualFragmentName\n          }\n        }]\n      }\n    }], document.definitions)\n  });\n\n  return query;\n}\n\nfunction assign(target) {\n  var sources = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    sources[_i - 1] = arguments[_i];\n  }\n\n  sources.forEach(function (source) {\n    if (typeof source === 'undefined' || source === null) {\n      return;\n    }\n\n    Object.keys(source).forEach(function (key) {\n      target[key] = source[key];\n    });\n  });\n  return target;\n}\n\nfunction getMutationDefinition(doc) {\n  checkDocument(doc);\n  var mutationDef = doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition' && definition.operation === 'mutation';\n  })[0];\n  process.env.NODE_ENV === \"production\" ? invariant(mutationDef, 7) : invariant(mutationDef, 'Must contain a mutation definition.');\n  return mutationDef;\n}\n\nfunction checkDocument(doc) {\n  process.env.NODE_ENV === \"production\" ? invariant(doc && doc.kind === 'Document', 8) : invariant(doc && doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n  var operations = doc.definitions.filter(function (d) {\n    return d.kind !== 'FragmentDefinition';\n  }).map(function (definition) {\n    if (definition.kind !== 'OperationDefinition') {\n      throw process.env.NODE_ENV === \"production\" ? new InvariantError(9) : new InvariantError(\"Schema type definitions not allowed in queries. Found: \\\"\" + definition.kind + \"\\\"\");\n    }\n\n    return definition;\n  });\n  process.env.NODE_ENV === \"production\" ? invariant(operations.length <= 1, 10) : invariant(operations.length <= 1, \"Ambiguous GraphQL document: contains \" + operations.length + \" operations\");\n  return doc;\n}\n\nfunction getOperationDefinition(doc) {\n  checkDocument(doc);\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition';\n  })[0];\n}\n\nfunction getOperationDefinitionOrDie(document) {\n  var def = getOperationDefinition(document);\n  process.env.NODE_ENV === \"production\" ? invariant(def, 11) : invariant(def, \"GraphQL document is missing an operation\");\n  return def;\n}\n\nfunction getOperationName(doc) {\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'OperationDefinition' && definition.name;\n  }).map(function (x) {\n    return x.name.value;\n  })[0] || null;\n}\n\nfunction getFragmentDefinitions(doc) {\n  return doc.definitions.filter(function (definition) {\n    return definition.kind === 'FragmentDefinition';\n  });\n}\n\nfunction getQueryDefinition(doc) {\n  var queryDef = getOperationDefinition(doc);\n  process.env.NODE_ENV === \"production\" ? invariant(queryDef && queryDef.operation === 'query', 12) : invariant(queryDef && queryDef.operation === 'query', 'Must contain a query definition.');\n  return queryDef;\n}\n\nfunction getFragmentDefinition(doc) {\n  process.env.NODE_ENV === \"production\" ? invariant(doc.kind === 'Document', 13) : invariant(doc.kind === 'Document', \"Expecting a parsed GraphQL document. Perhaps you need to wrap the query string in a \\\"gql\\\" tag? http://docs.apollostack.com/apollo-client/core.html#gql\");\n  process.env.NODE_ENV === \"production\" ? invariant(doc.definitions.length <= 1, 14) : invariant(doc.definitions.length <= 1, 'Fragment must have exactly one definition.');\n  var fragmentDef = doc.definitions[0];\n  process.env.NODE_ENV === \"production\" ? invariant(fragmentDef.kind === 'FragmentDefinition', 15) : invariant(fragmentDef.kind === 'FragmentDefinition', 'Must be a fragment definition.');\n  return fragmentDef;\n}\n\nfunction getMainDefinition(queryDoc) {\n  checkDocument(queryDoc);\n  var fragmentDefinition;\n\n  for (var _i = 0, _a = queryDoc.definitions; _i < _a.length; _i++) {\n    var definition = _a[_i];\n\n    if (definition.kind === 'OperationDefinition') {\n      var operation = definition.operation;\n\n      if (operation === 'query' || operation === 'mutation' || operation === 'subscription') {\n        return definition;\n      }\n    }\n\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      fragmentDefinition = definition;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw process.env.NODE_ENV === \"production\" ? new InvariantError(16) : new InvariantError('Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.');\n}\n\nfunction createFragmentMap(fragments) {\n  if (fragments === void 0) {\n    fragments = [];\n  }\n\n  var symTable = {};\n  fragments.forEach(function (fragment) {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\n\nfunction getDefaultValues(definition) {\n  if (definition && definition.variableDefinitions && definition.variableDefinitions.length) {\n    var defaultValues = definition.variableDefinitions.filter(function (_a) {\n      var defaultValue = _a.defaultValue;\n      return defaultValue;\n    }).map(function (_a) {\n      var variable = _a.variable,\n          defaultValue = _a.defaultValue;\n      var defaultValueObj = {};\n      valueToObjectRepresentation(defaultValueObj, variable.name, defaultValue);\n      return defaultValueObj;\n    });\n    return assign.apply(void 0, __spreadArrays([{}], defaultValues));\n  }\n\n  return {};\n}\n\nfunction variablesInOperation(operation) {\n  var names = new Set();\n\n  if (operation.variableDefinitions) {\n    for (var _i = 0, _a = operation.variableDefinitions; _i < _a.length; _i++) {\n      var definition = _a[_i];\n      names.add(definition.variable.name.value);\n    }\n  }\n\n  return names;\n}\n\nfunction filterInPlace(array, test, context) {\n  var target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n\nvar TYPENAME_FIELD = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename'\n  }\n};\n\nfunction isEmpty(op, fragments) {\n  return op.selectionSet.selections.every(function (selection) {\n    return selection.kind === 'FragmentSpread' && isEmpty(fragments[selection.name.value], fragments);\n  });\n}\n\nfunction nullIfDocIsEmpty(doc) {\n  return isEmpty(getOperationDefinition(doc) || getFragmentDefinition(doc), createFragmentMap(getFragmentDefinitions(doc))) ? null : doc;\n}\n\nfunction getDirectiveMatcher(directives) {\n  return function directiveMatcher(directive) {\n    return directives.some(function (dir) {\n      return dir.name && dir.name === directive.name.value || dir.test && dir.test(directive);\n    });\n  };\n}\n\nfunction removeDirectivesFromDocument(directives, doc) {\n  var variablesInUse = Object.create(null);\n  var variablesToRemove = [];\n  var fragmentSpreadsInUse = Object.create(null);\n  var fragmentSpreadsToRemove = [];\n  var modifiedDoc = nullIfDocIsEmpty(visit(doc, {\n    Variable: {\n      enter: function enter(node, _key, parent) {\n        if (parent.kind !== 'VariableDefinition') {\n          variablesInUse[node.name.value] = true;\n        }\n      }\n    },\n    Field: {\n      enter: function enter(node) {\n        if (directives && node.directives) {\n          var shouldRemoveField = directives.some(function (directive) {\n            return directive.remove;\n          });\n\n          if (shouldRemoveField && node.directives && node.directives.some(getDirectiveMatcher(directives))) {\n            if (node.arguments) {\n              node.arguments.forEach(function (arg) {\n                if (arg.value.kind === 'Variable') {\n                  variablesToRemove.push({\n                    name: arg.value.name.value\n                  });\n                }\n              });\n            }\n\n            if (node.selectionSet) {\n              getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(function (frag) {\n                fragmentSpreadsToRemove.push({\n                  name: frag.name.value\n                });\n              });\n            }\n\n            return null;\n          }\n        }\n      }\n    },\n    FragmentSpread: {\n      enter: function enter(node) {\n        fragmentSpreadsInUse[node.name.value] = true;\n      }\n    },\n    Directive: {\n      enter: function enter(node) {\n        if (getDirectiveMatcher(directives)(node)) {\n          return null;\n        }\n      }\n    }\n  }));\n\n  if (modifiedDoc && filterInPlace(variablesToRemove, function (v) {\n    return !variablesInUse[v.name];\n  }).length) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  if (modifiedDoc && filterInPlace(fragmentSpreadsToRemove, function (fs) {\n    return !fragmentSpreadsInUse[fs.name];\n  }).length) {\n    modifiedDoc = removeFragmentSpreadFromDocument(fragmentSpreadsToRemove, modifiedDoc);\n  }\n\n  return modifiedDoc;\n}\n\nfunction addTypenameToDocument(doc) {\n  return visit(checkDocument(doc), {\n    SelectionSet: {\n      enter: function enter(node, _key, parent) {\n        if (parent && parent.kind === 'OperationDefinition') {\n          return;\n        }\n\n        var selections = node.selections;\n\n        if (!selections) {\n          return;\n        }\n\n        var skip = selections.some(function (selection) {\n          return isField(selection) && (selection.name.value === '__typename' || selection.name.value.lastIndexOf('__', 0) === 0);\n        });\n\n        if (skip) {\n          return;\n        }\n\n        var field = parent;\n\n        if (isField(field) && field.directives && field.directives.some(function (d) {\n          return d.name.value === 'export';\n        })) {\n          return;\n        }\n\n        return __assign(__assign({}, node), {\n          selections: __spreadArrays(selections, [TYPENAME_FIELD])\n        });\n      }\n    }\n  });\n}\n\nvar connectionRemoveConfig = {\n  test: function test(directive) {\n    var willRemove = directive.name.value === 'connection';\n\n    if (willRemove) {\n      if (!directive.arguments || !directive.arguments.some(function (arg) {\n        return arg.name.value === 'key';\n      })) {\n        process.env.NODE_ENV === \"production\" || invariant.warn('Removing an @connection directive even though it does not have a key. ' + 'You may want to use the key parameter to specify a store key.');\n      }\n    }\n\n    return willRemove;\n  }\n};\n\nfunction removeConnectionDirectiveFromDocument(doc) {\n  return removeDirectivesFromDocument([connectionRemoveConfig], checkDocument(doc));\n}\n\nfunction hasDirectivesInSelectionSet(directives, selectionSet, nestedCheck) {\n  if (nestedCheck === void 0) {\n    nestedCheck = true;\n  }\n\n  return selectionSet && selectionSet.selections && selectionSet.selections.some(function (selection) {\n    return hasDirectivesInSelection(directives, selection, nestedCheck);\n  });\n}\n\nfunction hasDirectivesInSelection(directives, selection, nestedCheck) {\n  if (nestedCheck === void 0) {\n    nestedCheck = true;\n  }\n\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return selection.directives.some(getDirectiveMatcher(directives)) || nestedCheck && hasDirectivesInSelectionSet(directives, selection.selectionSet, nestedCheck);\n}\n\nfunction getDirectivesFromDocument(directives, doc) {\n  checkDocument(doc);\n  var parentPath;\n  return nullIfDocIsEmpty(visit(doc, {\n    SelectionSet: {\n      enter: function enter(node, _key, _parent, path) {\n        var currentPath = path.join('-');\n\n        if (!parentPath || currentPath === parentPath || !currentPath.startsWith(parentPath)) {\n          if (node.selections) {\n            var selectionsWithDirectives = node.selections.filter(function (selection) {\n              return hasDirectivesInSelection(directives, selection);\n            });\n\n            if (hasDirectivesInSelectionSet(directives, node, false)) {\n              parentPath = currentPath;\n            }\n\n            return __assign(__assign({}, node), {\n              selections: selectionsWithDirectives\n            });\n          } else {\n            return null;\n          }\n        }\n      }\n    }\n  }));\n}\n\nfunction getArgumentMatcher(config) {\n  return function argumentMatcher(argument) {\n    return config.some(function (aConfig) {\n      return argument.value && argument.value.kind === 'Variable' && argument.value.name && (aConfig.name === argument.value.name.value || aConfig.test && aConfig.test(argument));\n    });\n  };\n}\n\nfunction removeArgumentsFromDocument(config, doc) {\n  var argMatcher = getArgumentMatcher(config);\n  return nullIfDocIsEmpty(visit(doc, {\n    OperationDefinition: {\n      enter: function enter(node) {\n        return __assign(__assign({}, node), {\n          variableDefinitions: node.variableDefinitions.filter(function (varDef) {\n            return !config.some(function (arg) {\n              return arg.name === varDef.variable.name.value;\n            });\n          })\n        });\n      }\n    },\n    Field: {\n      enter: function enter(node) {\n        var shouldRemoveField = config.some(function (argConfig) {\n          return argConfig.remove;\n        });\n\n        if (shouldRemoveField) {\n          var argMatchCount_1 = 0;\n          node.arguments.forEach(function (arg) {\n            if (argMatcher(arg)) {\n              argMatchCount_1 += 1;\n            }\n          });\n\n          if (argMatchCount_1 === 1) {\n            return null;\n          }\n        }\n      }\n    },\n    Argument: {\n      enter: function enter(node) {\n        if (argMatcher(node)) {\n          return null;\n        }\n      }\n    }\n  }));\n}\n\nfunction removeFragmentSpreadFromDocument(config, doc) {\n  function enter(node) {\n    if (config.some(function (def) {\n      return def.name === node.name.value;\n    })) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(visit(doc, {\n    FragmentSpread: {\n      enter: enter\n    },\n    FragmentDefinition: {\n      enter: enter\n    }\n  }));\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(selectionSet) {\n  var allFragments = [];\n  selectionSet.selections.forEach(function (selection) {\n    if ((isField(selection) || isInlineFragment(selection)) && selection.selectionSet) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(function (frag) {\n        return allFragments.push(frag);\n      });\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n  return allFragments;\n}\n\nfunction buildQueryFromSelectionSet(document) {\n  var definition = getMainDefinition(document);\n  var definitionOperation = definition.operation;\n\n  if (definitionOperation === 'query') {\n    return document;\n  }\n\n  var modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter: function enter(node) {\n        return __assign(__assign({}, node), {\n          operation: 'query'\n        });\n      }\n    }\n  });\n  return modifiedDoc;\n}\n\nfunction removeClientSetsFromDocument(document) {\n  checkDocument(document);\n  var modifiedDoc = removeDirectivesFromDocument([{\n    test: function test(directive) {\n      return directive.name.value === 'client';\n    },\n    remove: true\n  }], document);\n\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter: function enter(node) {\n          if (node.selectionSet) {\n            var isTypenameOnly = node.selectionSet.selections.every(function (selection) {\n              return isField(selection) && selection.name.value === '__typename';\n            });\n\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        }\n      }\n    });\n  }\n\n  return modifiedDoc;\n}\n\nvar canUseWeakMap = typeof WeakMap === 'function' && !(typeof navigator === 'object' && navigator.product === 'ReactNative');\nvar toString = Object.prototype.toString;\n\nfunction cloneDeep(value) {\n  return cloneDeepHelper(value, new Map());\n}\n\nfunction cloneDeepHelper(val, seen) {\n  switch (toString.call(val)) {\n    case \"[object Array]\":\n      {\n        if (seen.has(val)) return seen.get(val);\n        var copy_1 = val.slice(0);\n        seen.set(val, copy_1);\n        copy_1.forEach(function (child, i) {\n          copy_1[i] = cloneDeepHelper(child, seen);\n        });\n        return copy_1;\n      }\n\n    case \"[object Object]\":\n      {\n        if (seen.has(val)) return seen.get(val);\n        var copy_2 = Object.create(Object.getPrototypeOf(val));\n        seen.set(val, copy_2);\n        Object.keys(val).forEach(function (key) {\n          copy_2[key] = cloneDeepHelper(val[key], seen);\n        });\n        return copy_2;\n      }\n\n    default:\n      return val;\n  }\n}\n\nfunction getEnv() {\n  if (typeof process !== 'undefined' && process.env.NODE_ENV) {\n    return process.env.NODE_ENV;\n  }\n\n  return 'development';\n}\n\nfunction isEnv(env) {\n  return getEnv() === env;\n}\n\nfunction isProduction() {\n  return isEnv('production') === true;\n}\n\nfunction isDevelopment() {\n  return isEnv('development') === true;\n}\n\nfunction isTest() {\n  return isEnv('test') === true;\n}\n\nfunction tryFunctionOrLogError(f) {\n  try {\n    return f();\n  } catch (e) {\n    if (console.error) {\n      console.error(e);\n    }\n  }\n}\n\nfunction graphQLResultHasError(result) {\n  return result.errors && result.errors.length;\n}\n\nfunction deepFreeze(o) {\n  Object.freeze(o);\n  Object.getOwnPropertyNames(o).forEach(function (prop) {\n    if (o[prop] !== null && (typeof o[prop] === 'object' || typeof o[prop] === 'function') && !Object.isFrozen(o[prop])) {\n      deepFreeze(o[prop]);\n    }\n  });\n  return o;\n}\n\nfunction maybeDeepFreeze(obj) {\n  if (isDevelopment() || isTest()) {\n    var symbolIsPolyfilled = typeof Symbol === 'function' && typeof Symbol('') === 'string';\n\n    if (!symbolIsPolyfilled) {\n      return deepFreeze(obj);\n    }\n  }\n\n  return obj;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction mergeDeep() {\n  var sources = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    sources[_i] = arguments[_i];\n  }\n\n  return mergeDeepArray(sources);\n}\n\nfunction mergeDeepArray(sources) {\n  var target = sources[0] || {};\n  var count = sources.length;\n\n  if (count > 1) {\n    var pastCopies = [];\n    target = shallowCopyForMerge(target, pastCopies);\n\n    for (var i = 1; i < count; ++i) {\n      target = mergeHelper(target, sources[i], pastCopies);\n    }\n  }\n\n  return target;\n}\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\nfunction mergeHelper(target, source, pastCopies) {\n  if (isObject(source) && isObject(target)) {\n    if (Object.isExtensible && !Object.isExtensible(target)) {\n      target = shallowCopyForMerge(target, pastCopies);\n    }\n\n    Object.keys(source).forEach(function (sourceKey) {\n      var sourceValue = source[sourceKey];\n\n      if (hasOwnProperty.call(target, sourceKey)) {\n        var targetValue = target[sourceKey];\n\n        if (sourceValue !== targetValue) {\n          target[sourceKey] = mergeHelper(shallowCopyForMerge(targetValue, pastCopies), sourceValue, pastCopies);\n        }\n      } else {\n        target[sourceKey] = sourceValue;\n      }\n    });\n    return target;\n  }\n\n  return source;\n}\n\nfunction shallowCopyForMerge(value, pastCopies) {\n  if (value !== null && typeof value === 'object' && pastCopies.indexOf(value) < 0) {\n    if (Array.isArray(value)) {\n      value = value.slice(0);\n    } else {\n      value = __assign({\n        __proto__: Object.getPrototypeOf(value)\n      }, value);\n    }\n\n    pastCopies.push(value);\n  }\n\n  return value;\n}\n\nvar haveWarned = Object.create({});\n\nfunction warnOnceInDevelopment(msg, type) {\n  if (type === void 0) {\n    type = 'warn';\n  }\n\n  if (!isProduction() && !haveWarned[msg]) {\n    if (!isTest()) {\n      haveWarned[msg] = true;\n    }\n\n    if (type === 'error') {\n      console.error(msg);\n    } else {\n      console.warn(msg);\n    }\n  }\n}\n\nfunction stripSymbols(data) {\n  return JSON.parse(JSON.stringify(data));\n}\n\nexport { addTypenameToDocument, argumentsObjectFromField, assign, buildQueryFromSelectionSet, canUseWeakMap, checkDocument, cloneDeep, createFragmentMap, getDefaultValues, getDirectiveInfoFromField, getDirectiveNames, getDirectivesFromDocument, getEnv, getFragmentDefinition, getFragmentDefinitions, getFragmentQueryDocument, getInclusionDirectives, getMainDefinition, getMutationDefinition, getOperationDefinition, getOperationDefinitionOrDie, getOperationName, getQueryDefinition, getStoreKeyName, graphQLResultHasError, hasClientExports, hasDirectives, isDevelopment, isEnv, isField, isIdValue, isInlineFragment, isJsonValue, isNumberValue, isProduction, isScalarValue, isTest, maybeDeepFreeze, mergeDeep, mergeDeepArray, removeArgumentsFromDocument, removeClientSetsFromDocument, removeConnectionDirectiveFromDocument, removeDirectivesFromDocument, removeFragmentSpreadFromDocument, resultKeyNameFromField, shouldInclude, storeKeyNameFromField, stripSymbols, toIdValue, tryFunctionOrLogError, valueFromNode, valueToObjectRepresentation, variablesInOperation, warnOnceInDevelopment };"],"sourceRoot":""}